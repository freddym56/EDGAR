{"version":3,"file":"870.bundle.2be58e7a854ed7626abd.min.js","mappings":"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","sources":["webpack://ixviewer-2/./node_modules/tslog/dist/esm/runtime/browser/index.js","webpack://ixviewer-2/./node_modules/tslog/dist/esm/index.js","webpack://ixviewer-2/./node_modules/tslog/dist/esm/BaseLogger.js","webpack://ixviewer-2/./node_modules/tslog/dist/esm/runtime/browser/util.inspect.polyfil.js","webpack://ixviewer-2/./node_modules/tslog/dist/esm/formatTemplate.js","webpack://ixviewer-2/./node_modules/tslog/dist/esm/runtime/browser/helper.jsonStringifyRecursive.js","webpack://ixviewer-2/./node_modules/tslog/dist/esm/formatNumberAddZeros.js","webpack://ixviewer-2/./node_modules/tslog/dist/esm/prettyLogStyles.js"],"sourcesContent":["import { formatTemplate } from \"../../formatTemplate.js\";\nimport { formatWithOptions } from \"./util.inspect.polyfil.js\";\nimport { jsonStringifyRecursive } from \"./helper.jsonStringifyRecursive.js\";\nconst meta = {\n    runtime: ![typeof window, typeof document].includes(\"undefined\") ? \"Browser\" : \"Generic\",\n    browser: globalThis?.[\"navigator\"]?.userAgent,\n};\nconst pathRegex = /(?:(?:file|https?|global code|[^@]+)@)?(?:file:)?((?:\\/[^:/]+){2,})(?::(\\d+))?(?::(\\d+))?/;\nexport function getMeta(logLevelId, logLevelName, stackDepthLevel, hideLogPositionForPerformance, name, parentNames) {\n    return Object.assign({}, meta, {\n        name,\n        parentNames,\n        date: new Date(),\n        logLevelId,\n        logLevelName,\n        path: !hideLogPositionForPerformance ? getCallerStackFrame(stackDepthLevel) : undefined,\n    });\n}\nexport function getCallerStackFrame(stackDepthLevel, error = Error()) {\n    return stackLineToStackFrame(error?.stack?.split(\"\\n\")?.filter((line) => !line.includes(\"Error: \"))?.[stackDepthLevel]);\n}\nexport function getErrorTrace(error) {\n    return error?.stack\n        ?.split(\"\\n\")\n        ?.filter((line) => !line.includes(\"Error: \"))\n        ?.reduce((result, line) => {\n        result.push(stackLineToStackFrame(line));\n        return result;\n    }, []);\n}\nfunction stackLineToStackFrame(line) {\n    const href = globalThis.location.origin;\n    const pathResult = {\n        fullFilePath: undefined,\n        fileName: undefined,\n        fileNameWithLine: undefined,\n        fileColumn: undefined,\n        fileLine: undefined,\n        filePath: undefined,\n        filePathWithLine: undefined,\n        method: undefined,\n    };\n    if (line != null) {\n        const match = line.match(pathRegex);\n        if (match) {\n            pathResult.filePath = match[1].replace(/\\?.*$/, \"\");\n            pathResult.fullFilePath = `${href}${pathResult.filePath}`;\n            const pathParts = pathResult.filePath.split(\"/\");\n            pathResult.fileName = pathParts[pathParts.length - 1];\n            pathResult.fileLine = match[2];\n            pathResult.fileColumn = match[3];\n            pathResult.filePathWithLine = `${pathResult.filePath}:${pathResult.fileLine}`;\n            pathResult.fileNameWithLine = `${pathResult.fileName}:${pathResult.fileLine}`;\n        }\n    }\n    return pathResult;\n}\nexport function isError(e) {\n    return e instanceof Error;\n}\nexport function prettyFormatLogObj(maskedArgs, settings) {\n    return maskedArgs.reduce((result, arg) => {\n        isError(arg) ? result.errors.push(prettyFormatErrorObj(arg, settings)) : result.args.push(arg);\n        return result;\n    }, { args: [], errors: [] });\n}\nexport function prettyFormatErrorObj(error, settings) {\n    const errorStackStr = getErrorTrace(error).map((stackFrame) => {\n        return formatTemplate(settings, settings.prettyErrorStackTemplate, { ...stackFrame }, true);\n    });\n    const placeholderValuesError = {\n        errorName: ` ${error.name} `,\n        errorMessage: error.message,\n        errorStack: errorStackStr.join(\"\\n\"),\n    };\n    return formatTemplate(settings, settings.prettyErrorTemplate, placeholderValuesError);\n}\nexport function transportFormatted(logMetaMarkup, logArgs, logErrors, settings) {\n    const logErrorsStr = (logErrors.length > 0 && logArgs.length > 0 ? \"\\n\" : \"\") + logErrors.join(\"\\n\");\n    settings.prettyInspectOptions.colors = settings.stylePrettyLogs;\n    console.log(logMetaMarkup + formatWithOptions(settings.prettyInspectOptions, ...logArgs) + logErrorsStr);\n}\nexport function transportJSON(json) {\n    console.log(jsonStringifyRecursive(json));\n}\nexport function isBuffer(arg) {\n    return arg ? undefined : undefined;\n}\n","import { BaseLogger } from \"./BaseLogger.js\";\nexport { BaseLogger };\nexport class Logger extends BaseLogger {\n    constructor(settings, logObj) {\n        super(settings, logObj, 5);\n    }\n    log(logLevelId, logLevelName, ...args) {\n        return super.log(logLevelId, logLevelName, ...args);\n    }\n    silly(...args) {\n        return super.log(0, \"SILLY\", ...args);\n    }\n    trace(...args) {\n        return super.log(1, \"TRACE\", ...args);\n    }\n    debug(...args) {\n        return super.log(2, \"DEBUG\", ...args);\n    }\n    info(...args) {\n        return super.log(3, \"INFO\", ...args);\n    }\n    warn(...args) {\n        return super.log(4, \"WARN\", ...args);\n    }\n    error(...args) {\n        return super.log(5, \"ERROR\", ...args);\n    }\n    fatal(...args) {\n        return super.log(6, \"FATAL\", ...args);\n    }\n    getSubLogger(settings, logObj) {\n        return super.getSubLogger(settings, logObj);\n    }\n}\n","import { getMeta, getErrorTrace, transportFormatted, transportJSON, prettyFormatLogObj, isError, isBuffer } from \"./runtime/nodejs/index.js\";\nimport { formatTemplate } from \"./formatTemplate.js\";\nimport { formatNumberAddZeros } from \"./formatNumberAddZeros.js\";\nexport * from \"./interfaces.js\";\nexport class BaseLogger {\n    constructor(settings, logObj, stackDepthLevel = 4) {\n        this.logObj = logObj;\n        this.stackDepthLevel = stackDepthLevel;\n        const isBrowser = ![typeof window, typeof document].includes(\"undefined\");\n        const isNode = Object.prototype.toString.call(typeof process !== \"undefined\" ? process : 0) === \"[object process]\";\n        this.runtime = isBrowser ? \"browser\" : isNode ? \"nodejs\" : \"unknown\";\n        const isBrowserBlinkEngine = isBrowser ? ((window?.[\"chrome\"] || (window.Intl && Intl?.[\"v8BreakIterator\"])) && \"CSS\" in window) != null : false;\n        const isSafari = isBrowser ? /^((?!chrome|android).)*safari/i.test(navigator?.userAgent) : false;\n        this.stackDepthLevel = isSafari ? 4 : this.stackDepthLevel;\n        this.settings = {\n            type: settings?.type ?? \"pretty\",\n            name: settings?.name,\n            parentNames: settings?.parentNames,\n            minLevel: settings?.minLevel ?? 0,\n            argumentsArrayName: settings?.argumentsArrayName,\n            hideLogPositionForProduction: settings?.hideLogPositionForProduction ?? false,\n            prettyLogTemplate: settings?.prettyLogTemplate ??\n                \"{{yyyy}}.{{mm}}.{{dd}} {{hh}}:{{MM}}:{{ss}}:{{ms}}\\t{{logLevelName}}\\t{{filePathWithLine}}{{nameWithDelimiterPrefix}}\\t\",\n            prettyErrorTemplate: settings?.prettyErrorTemplate ?? \"\\n{{errorName}} {{errorMessage}}\\nerror stack:\\n{{errorStack}}\",\n            prettyErrorStackTemplate: settings?.prettyErrorStackTemplate ?? \"  • {{fileName}}\\t{{method}}\\n\\t{{filePathWithLine}}\",\n            prettyErrorParentNamesSeparator: settings?.prettyErrorParentNamesSeparator ?? \":\",\n            prettyErrorLoggerNameDelimiter: settings?.prettyErrorLoggerNameDelimiter ?? \"\\t\",\n            stylePrettyLogs: settings?.stylePrettyLogs ?? true,\n            prettyLogTimeZone: settings?.prettyLogTimeZone ?? \"UTC\",\n            prettyLogStyles: settings?.prettyLogStyles ?? {\n                logLevelName: {\n                    \"*\": [\"bold\", \"black\", \"bgWhiteBright\", \"dim\"],\n                    SILLY: [\"bold\", \"white\"],\n                    TRACE: [\"bold\", \"whiteBright\"],\n                    DEBUG: [\"bold\", \"green\"],\n                    INFO: [\"bold\", \"blue\"],\n                    WARN: [\"bold\", \"yellow\"],\n                    ERROR: [\"bold\", \"red\"],\n                    FATAL: [\"bold\", \"redBright\"],\n                },\n                dateIsoStr: \"white\",\n                filePathWithLine: \"white\",\n                name: [\"white\", \"bold\"],\n                nameWithDelimiterPrefix: [\"white\", \"bold\"],\n                nameWithDelimiterSuffix: [\"white\", \"bold\"],\n                errorName: [\"bold\", \"bgRedBright\", \"whiteBright\"],\n                fileName: [\"yellow\"],\n                fileNameWithLine: \"white\",\n            },\n            prettyInspectOptions: settings?.prettyInspectOptions ?? {\n                colors: true,\n                compact: false,\n                depth: Infinity,\n            },\n            metaProperty: settings?.metaProperty ?? \"_meta\",\n            maskPlaceholder: settings?.maskPlaceholder ?? \"[***]\",\n            maskValuesOfKeys: settings?.maskValuesOfKeys ?? [\"password\"],\n            maskValuesOfKeysCaseInsensitive: settings?.maskValuesOfKeysCaseInsensitive ?? false,\n            maskValuesRegEx: settings?.maskValuesRegEx,\n            prefix: [...(settings?.prefix ?? [])],\n            attachedTransports: [...(settings?.attachedTransports ?? [])],\n            overwrite: {\n                mask: settings?.overwrite?.mask,\n                toLogObj: settings?.overwrite?.toLogObj,\n                addMeta: settings?.overwrite?.addMeta,\n                formatMeta: settings?.overwrite?.formatMeta,\n                formatLogObj: settings?.overwrite?.formatLogObj,\n                transportFormatted: settings?.overwrite?.transportFormatted,\n                transportJSON: settings?.overwrite?.transportJSON,\n            },\n        };\n        this.settings.stylePrettyLogs = this.settings.stylePrettyLogs && isBrowser && !isBrowserBlinkEngine ? false : this.settings.stylePrettyLogs;\n    }\n    log(logLevelId, logLevelName, ...args) {\n        if (logLevelId < this.settings.minLevel) {\n            return;\n        }\n        const logArgs = [...this.settings.prefix, ...args];\n        const maskedArgs = this.settings.overwrite?.mask != null\n            ? this.settings.overwrite?.mask(logArgs)\n            : this.settings.maskValuesOfKeys != null && this.settings.maskValuesOfKeys.length > 0\n                ? this._mask(logArgs)\n                : logArgs;\n        const thisLogObj = this.logObj != null ? this._recursiveCloneAndExecuteFunctions(this.logObj) : undefined;\n        const logObj = this.settings.overwrite?.toLogObj != null ? this.settings.overwrite?.toLogObj(maskedArgs, thisLogObj) : this._toLogObj(maskedArgs, thisLogObj);\n        const logObjWithMeta = this.settings.overwrite?.addMeta != null\n            ? this.settings.overwrite?.addMeta(logObj, logLevelId, logLevelName)\n            : this._addMetaToLogObj(logObj, logLevelId, logLevelName);\n        let logMetaMarkup;\n        let logArgsAndErrorsMarkup = undefined;\n        if (this.settings.overwrite?.formatMeta != null) {\n            logMetaMarkup = this.settings.overwrite?.formatMeta(logObjWithMeta?.[this.settings.metaProperty]);\n        }\n        if (this.settings.overwrite?.formatLogObj != null) {\n            logArgsAndErrorsMarkup = this.settings.overwrite?.formatLogObj(maskedArgs, this.settings);\n        }\n        if (this.settings.type === \"pretty\") {\n            logMetaMarkup = logMetaMarkup ?? this._prettyFormatLogObjMeta(logObjWithMeta?.[this.settings.metaProperty]);\n            logArgsAndErrorsMarkup = logArgsAndErrorsMarkup ?? prettyFormatLogObj(maskedArgs, this.settings);\n        }\n        if (logMetaMarkup != null && logArgsAndErrorsMarkup != null) {\n            this.settings.overwrite?.transportFormatted != null\n                ? this.settings.overwrite?.transportFormatted(logMetaMarkup, logArgsAndErrorsMarkup.args, logArgsAndErrorsMarkup.errors, this.settings)\n                : transportFormatted(logMetaMarkup, logArgsAndErrorsMarkup.args, logArgsAndErrorsMarkup.errors, this.settings);\n        }\n        else {\n            this.settings.overwrite?.transportJSON != null\n                ? this.settings.overwrite?.transportJSON(logObjWithMeta)\n                : this.settings.type !== \"hidden\"\n                    ? transportJSON(logObjWithMeta)\n                    : undefined;\n        }\n        if (this.settings.attachedTransports != null && this.settings.attachedTransports.length > 0) {\n            this.settings.attachedTransports.forEach((transportLogger) => {\n                transportLogger(logObjWithMeta);\n            });\n        }\n        return logObjWithMeta;\n    }\n    attachTransport(transportLogger) {\n        this.settings.attachedTransports.push(transportLogger);\n    }\n    getSubLogger(settings, logObj) {\n        const subLoggerSettings = {\n            ...this.settings,\n            ...settings,\n            parentNames: this.settings?.parentNames != null && this.settings?.name != null\n                ? [...this.settings.parentNames, this.settings.name]\n                : this.settings?.name != null\n                    ? [this.settings.name]\n                    : undefined,\n            prefix: [...this.settings.prefix, ...(settings?.prefix ?? [])],\n        };\n        const subLogger = new this.constructor(subLoggerSettings, logObj ?? this.logObj, this.stackDepthLevel);\n        return subLogger;\n    }\n    _mask(args) {\n        const maskValuesOfKeys = this.settings.maskValuesOfKeysCaseInsensitive !== true ? this.settings.maskValuesOfKeys : this.settings.maskValuesOfKeys.map((key) => key.toLowerCase());\n        return args?.map((arg) => {\n            return this._recursiveCloneAndMaskValuesOfKeys(arg, maskValuesOfKeys);\n        });\n    }\n    _recursiveCloneAndMaskValuesOfKeys(source, keys, seen = []) {\n        if (seen.includes(source)) {\n            return { ...source };\n        }\n        if (typeof source === \"object\" && source != null) {\n            seen.push(source);\n        }\n        return isBuffer(source)\n            ? source\n            : source instanceof Map\n                ? new Map(source)\n                : source instanceof Set\n                    ? new Set(source)\n                    : Array.isArray(source)\n                        ? source.map((item) => this._recursiveCloneAndMaskValuesOfKeys(item, keys, seen))\n                        : source instanceof Date\n                            ? new Date(source.getTime())\n                            : isError(source)\n                                ? Object.getOwnPropertyNames(source).reduce((o, prop) => {\n                                    o[prop] = keys.includes(this.settings?.maskValuesOfKeysCaseInsensitive !== true ? prop : prop.toLowerCase())\n                                        ? this.settings.maskPlaceholder\n                                        : this._recursiveCloneAndMaskValuesOfKeys(source[prop], keys, seen);\n                                    return o;\n                                }, this._cloneError(source))\n                                : source != null && typeof source === \"object\"\n                                    ? Object.getOwnPropertyNames(source).reduce((o, prop) => {\n                                        o[prop] = keys.includes(this.settings?.maskValuesOfKeysCaseInsensitive !== true ? prop : prop.toLowerCase())\n                                            ? this.settings.maskPlaceholder\n                                            : this._recursiveCloneAndMaskValuesOfKeys(source[prop], keys, seen);\n                                        return o;\n                                    }, Object.create(Object.getPrototypeOf(source)))\n                                    : ((source) => {\n                                        this.settings?.maskValuesRegEx?.forEach((regEx) => {\n                                            source = source?.toString()?.replace(regEx, this.settings.maskPlaceholder);\n                                        });\n                                        return source;\n                                    })(source);\n    }\n    _recursiveCloneAndExecuteFunctions(source, seen = []) {\n        if (seen.includes(source)) {\n            return { ...source };\n        }\n        if (typeof source === \"object\") {\n            seen.push(source);\n        }\n        return Array.isArray(source)\n            ? source.map((item) => this._recursiveCloneAndExecuteFunctions(item, seen))\n            : source instanceof Date\n                ? new Date(source.getTime())\n                : source && typeof source === \"object\"\n                    ? Object.getOwnPropertyNames(source).reduce((o, prop) => {\n                        Object.defineProperty(o, prop, Object.getOwnPropertyDescriptor(source, prop));\n                        o[prop] =\n                            typeof source[prop] === \"function\" ? source[prop]() : this._recursiveCloneAndExecuteFunctions(source[prop], seen);\n                        return o;\n                    }, Object.create(Object.getPrototypeOf(source)))\n                    : source;\n    }\n    _toLogObj(args, clonedLogObj = {}) {\n        args = args?.map((arg) => (isError(arg) ? this._toErrorObject(arg) : arg));\n        if (this.settings.argumentsArrayName == null) {\n            if (args.length === 1 && !Array.isArray(args[0]) && isBuffer(args[0]) !== true && !(args[0] instanceof Date)) {\n                clonedLogObj = typeof args[0] === \"object\" && args[0] != null ? { ...args[0], ...clonedLogObj } : { 0: args[0], ...clonedLogObj };\n            }\n            else {\n                clonedLogObj = { ...clonedLogObj, ...args };\n            }\n        }\n        else {\n            clonedLogObj = {\n                ...clonedLogObj,\n                [this.settings.argumentsArrayName]: args,\n            };\n        }\n        return clonedLogObj;\n    }\n    _cloneError(error) {\n        const ErrorConstructor = error.constructor;\n        const newError = new ErrorConstructor(error.message);\n        Object.assign(newError, error);\n        const propertyNames = Object.getOwnPropertyNames(newError);\n        for (const propName of propertyNames) {\n            const propDesc = Object.getOwnPropertyDescriptor(newError, propName);\n            if (propDesc) {\n                propDesc.writable = true;\n                Object.defineProperty(newError, propName, propDesc);\n            }\n        }\n        return newError;\n    }\n    _toErrorObject(error) {\n        return {\n            nativeError: error,\n            name: error.name ?? \"Error\",\n            message: error.message,\n            stack: getErrorTrace(error),\n        };\n    }\n    _addMetaToLogObj(logObj, logLevelId, logLevelName) {\n        return {\n            ...logObj,\n            [this.settings.metaProperty]: getMeta(logLevelId, logLevelName, this.stackDepthLevel, this.settings.hideLogPositionForProduction, this.settings.name, this.settings.parentNames),\n        };\n    }\n    _prettyFormatLogObjMeta(logObjMeta) {\n        if (logObjMeta == null) {\n            return \"\";\n        }\n        let template = this.settings.prettyLogTemplate;\n        const placeholderValues = {};\n        if (template.includes(\"{{yyyy}}.{{mm}}.{{dd}} {{hh}}:{{MM}}:{{ss}}:{{ms}}\")) {\n            template = template.replace(\"{{yyyy}}.{{mm}}.{{dd}} {{hh}}:{{MM}}:{{ss}}:{{ms}}\", \"{{dateIsoStr}}\");\n        }\n        else {\n            if (this.settings.prettyLogTimeZone === \"UTC\") {\n                placeholderValues[\"yyyy\"] = logObjMeta?.date?.getUTCFullYear() ?? \"----\";\n                placeholderValues[\"mm\"] = formatNumberAddZeros(logObjMeta?.date?.getUTCMonth(), 2, 1);\n                placeholderValues[\"dd\"] = formatNumberAddZeros(logObjMeta?.date?.getUTCDate(), 2);\n                placeholderValues[\"hh\"] = formatNumberAddZeros(logObjMeta?.date?.getUTCHours(), 2);\n                placeholderValues[\"MM\"] = formatNumberAddZeros(logObjMeta?.date?.getUTCMinutes(), 2);\n                placeholderValues[\"ss\"] = formatNumberAddZeros(logObjMeta?.date?.getUTCSeconds(), 2);\n                placeholderValues[\"ms\"] = formatNumberAddZeros(logObjMeta?.date?.getUTCMilliseconds(), 3);\n            }\n            else {\n                placeholderValues[\"yyyy\"] = logObjMeta?.date?.getFullYear() ?? \"----\";\n                placeholderValues[\"mm\"] = formatNumberAddZeros(logObjMeta?.date?.getMonth(), 2, 1);\n                placeholderValues[\"dd\"] = formatNumberAddZeros(logObjMeta?.date?.getDate(), 2);\n                placeholderValues[\"hh\"] = formatNumberAddZeros(logObjMeta?.date?.getHours(), 2);\n                placeholderValues[\"MM\"] = formatNumberAddZeros(logObjMeta?.date?.getMinutes(), 2);\n                placeholderValues[\"ss\"] = formatNumberAddZeros(logObjMeta?.date?.getSeconds(), 2);\n                placeholderValues[\"ms\"] = formatNumberAddZeros(logObjMeta?.date?.getMilliseconds(), 3);\n            }\n        }\n        const dateInSettingsTimeZone = this.settings.prettyLogTimeZone === \"UTC\" ? logObjMeta?.date : new Date(logObjMeta?.date?.getTime() - logObjMeta?.date?.getTimezoneOffset() * 60000);\n        placeholderValues[\"rawIsoStr\"] = dateInSettingsTimeZone?.toISOString();\n        placeholderValues[\"dateIsoStr\"] = dateInSettingsTimeZone?.toISOString().replace(\"T\", \" \").replace(\"Z\", \"\");\n        placeholderValues[\"logLevelName\"] = logObjMeta?.logLevelName;\n        placeholderValues[\"fileNameWithLine\"] = logObjMeta?.path?.fileNameWithLine ?? \"\";\n        placeholderValues[\"filePathWithLine\"] = logObjMeta?.path?.filePathWithLine ?? \"\";\n        placeholderValues[\"fullFilePath\"] = logObjMeta?.path?.fullFilePath ?? \"\";\n        let parentNamesString = this.settings.parentNames?.join(this.settings.prettyErrorParentNamesSeparator);\n        parentNamesString = parentNamesString != null && logObjMeta?.name != null ? parentNamesString + this.settings.prettyErrorParentNamesSeparator : undefined;\n        placeholderValues[\"name\"] = logObjMeta?.name != null || parentNamesString != null ? (parentNamesString ?? \"\") + logObjMeta?.name ?? \"\" : \"\";\n        placeholderValues[\"nameWithDelimiterPrefix\"] =\n            placeholderValues[\"name\"].length > 0 ? this.settings.prettyErrorLoggerNameDelimiter + placeholderValues[\"name\"] : \"\";\n        placeholderValues[\"nameWithDelimiterSuffix\"] =\n            placeholderValues[\"name\"].length > 0 ? placeholderValues[\"name\"] + this.settings.prettyErrorLoggerNameDelimiter : \"\";\n        return formatTemplate(this.settings, template, placeholderValues);\n    }\n}\n","import { prettyLogStyles } from \"../../prettyLogStyles.js\";\nimport { jsonStringifyRecursive } from \"./helper.jsonStringifyRecursive.js\";\nexport function inspect(obj, opts) {\n    const ctx = {\n        seen: [],\n        stylize: stylizeNoColor,\n    };\n    if (opts != null) {\n        _extend(ctx, opts);\n    }\n    if (isUndefined(ctx.showHidden))\n        ctx.showHidden = false;\n    if (isUndefined(ctx.depth))\n        ctx.depth = 2;\n    if (isUndefined(ctx.colors))\n        ctx.colors = true;\n    if (isUndefined(ctx.customInspect))\n        ctx.customInspect = true;\n    if (ctx.colors)\n        ctx.stylize = stylizeWithColor;\n    return formatValue(ctx, obj, ctx.depth);\n}\ninspect.colors = prettyLogStyles;\ninspect.styles = {\n    special: \"cyan\",\n    number: \"yellow\",\n    boolean: \"yellow\",\n    undefined: \"grey\",\n    null: \"bold\",\n    string: \"green\",\n    date: \"magenta\",\n    regexp: \"red\",\n};\nfunction isBoolean(arg) {\n    return typeof arg === \"boolean\";\n}\nfunction isUndefined(arg) {\n    return arg == null;\n}\nfunction stylizeNoColor(str) {\n    return str;\n}\nfunction stylizeWithColor(str, styleType) {\n    const style = inspect.styles[styleType];\n    if (style != null && inspect?.colors?.[style]?.[0] != null && inspect?.colors?.[style]?.[1] != null) {\n        return \"\\u001b[\" + inspect.colors[style][0] + \"m\" + str + \"\\u001b[\" + inspect.colors[style][1] + \"m\";\n    }\n    else {\n        return str;\n    }\n}\nfunction isFunction(arg) {\n    return typeof arg === \"function\";\n}\nfunction isString(arg) {\n    return typeof arg === \"string\";\n}\nfunction isNumber(arg) {\n    return typeof arg === \"number\";\n}\nfunction isNull(arg) {\n    return arg === null;\n}\nfunction hasOwn(obj, prop) {\n    return Object.prototype.hasOwnProperty.call(obj, prop);\n}\nfunction isRegExp(re) {\n    return isObject(re) && objectToString(re) === \"[object RegExp]\";\n}\nfunction isObject(arg) {\n    return typeof arg === \"object\" && arg !== null;\n}\nfunction isError(e) {\n    return isObject(e) && (objectToString(e) === \"[object Error]\" || e instanceof Error);\n}\nfunction isDate(d) {\n    return isObject(d) && objectToString(d) === \"[object Date]\";\n}\nfunction objectToString(o) {\n    return Object.prototype.toString.call(o);\n}\nfunction arrayToHash(array) {\n    const hash = {};\n    array.forEach((val) => {\n        hash[val] = true;\n    });\n    return hash;\n}\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n    const output = [];\n    for (let i = 0, l = value.length; i < l; ++i) {\n        if (hasOwn(value, String(i))) {\n            output.push(formatProperty(ctx, value, recurseTimes, visibleKeys, String(i), true));\n        }\n        else {\n            output.push(\"\");\n        }\n    }\n    keys.forEach((key) => {\n        if (!key.match(/^\\d+$/)) {\n            output.push(formatProperty(ctx, value, recurseTimes, visibleKeys, key, true));\n        }\n    });\n    return output;\n}\nfunction formatError(value) {\n    return \"[\" + Error.prototype.toString.call(value) + \"]\";\n}\nexport function formatValue(ctx, value, recurseTimes = 0) {\n    if (ctx.customInspect &&\n        value != null &&\n        isFunction(value) &&\n        value?.inspect !== inspect &&\n        !(value?.constructor && value?.constructor.prototype === value)) {\n        if (typeof value.inspect !== \"function\" && value.toString != null) {\n            return value.toString();\n        }\n        let ret = value?.inspect(recurseTimes, ctx);\n        if (!isString(ret)) {\n            ret = formatValue(ctx, ret, recurseTimes);\n        }\n        return ret;\n    }\n    const primitive = formatPrimitive(ctx, value);\n    if (primitive) {\n        return primitive;\n    }\n    let keys = Object.keys(value);\n    const visibleKeys = arrayToHash(keys);\n    try {\n        if (ctx.showHidden && Object.getOwnPropertyNames) {\n            keys = Object.getOwnPropertyNames(value);\n        }\n    }\n    catch (e) {\n    }\n    if (isError(value) && (keys.indexOf(\"message\") >= 0 || keys.indexOf(\"description\") >= 0)) {\n        return formatError(value);\n    }\n    if (keys.length === 0) {\n        if (isFunction(ctx.stylize)) {\n            if (isFunction(value)) {\n                const name = value.name ? \": \" + value.name : \"\";\n                return ctx.stylize(\"[Function\" + name + \"]\", \"special\");\n            }\n            if (isRegExp(value)) {\n                return ctx.stylize(RegExp.prototype.toString.call(value), \"regexp\");\n            }\n            if (isDate(value)) {\n                return ctx.stylize(Date.prototype.toString.call(value), \"date\");\n            }\n            if (isError(value)) {\n                return formatError(value);\n            }\n        }\n        else {\n            return value;\n        }\n    }\n    let base = \"\";\n    let array = false;\n    let braces = [\"{\\n\", \"\\n}\"];\n    if (Array.isArray(value)) {\n        array = true;\n        braces = [\"[\\n\", \"\\n]\"];\n    }\n    if (isFunction(value)) {\n        const n = value.name ? \": \" + value.name : \"\";\n        base = \" [Function\" + n + \"]\";\n    }\n    if (isRegExp(value)) {\n        base = \" \" + RegExp.prototype.toString.call(value);\n    }\n    if (isDate(value)) {\n        base = \" \" + Date.prototype.toUTCString.call(value);\n    }\n    if (isError(value)) {\n        base = \" \" + formatError(value);\n    }\n    if (keys.length === 0 && (!array || value.length == 0)) {\n        return braces[0] + base + braces[1];\n    }\n    if (recurseTimes < 0) {\n        if (isRegExp(value)) {\n            return ctx.stylize(RegExp.prototype.toString.call(value), \"regexp\");\n        }\n        else {\n            return ctx.stylize(\"[Object]\", \"special\");\n        }\n    }\n    ctx.seen.push(value);\n    let output;\n    if (array) {\n        output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n    }\n    else {\n        output = keys.map((key) => {\n            return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n        });\n    }\n    ctx.seen.pop();\n    return reduceToSingleString(output, base, braces);\n}\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n    let name, str, desc;\n    desc = { value: void 0 };\n    try {\n        desc.value = value[key];\n    }\n    catch (e) {\n    }\n    try {\n        if (Object.getOwnPropertyDescriptor) {\n            desc = Object.getOwnPropertyDescriptor(value, key) || desc;\n        }\n    }\n    catch (e) {\n    }\n    if (desc.get) {\n        if (desc.set) {\n            str = ctx.stylize(\"[Getter/Setter]\", \"special\");\n        }\n        else {\n            str = ctx.stylize(\"[Getter]\", \"special\");\n        }\n    }\n    else {\n        if (desc.set) {\n            str = ctx.stylize(\"[Setter]\", \"special\");\n        }\n    }\n    if (!hasOwn(visibleKeys, key)) {\n        name = \"[\" + key + \"]\";\n    }\n    if (!str) {\n        if (ctx.seen.indexOf(desc.value) < 0) {\n            if (isNull(recurseTimes)) {\n                str = formatValue(ctx, desc.value, undefined);\n            }\n            else {\n                str = formatValue(ctx, desc.value, recurseTimes - 1);\n            }\n            if (str.indexOf(\"\\n\") > -1) {\n                if (array) {\n                    str = str\n                        .split(\"\\n\")\n                        .map((line) => {\n                        return \"  \" + line;\n                    })\n                        .join(\"\\n\")\n                        .substr(2);\n                }\n                else {\n                    str =\n                        \"\\n\" +\n                            str\n                                .split(\"\\n\")\n                                .map((line) => {\n                                return \"   \" + line;\n                            })\n                                .join(\"\\n\");\n                }\n            }\n        }\n        else {\n            str = ctx.stylize(\"[Circular]\", \"special\");\n        }\n    }\n    if (isUndefined(name)) {\n        if (array && key.match(/^\\d+$/)) {\n            return str;\n        }\n        name = JSON.stringify(\"\" + key);\n        if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n            name = name.substr(1, name.length - 2);\n            name = ctx.stylize(name, \"name\");\n        }\n        else {\n            name = name\n                .replace(/'/g, \"\\\\'\")\n                .replace(/\\\\\"/g, \"\\\\'\")\n                .replace(/(^\"|\"$)/g, \"'\");\n            name = ctx.stylize(name, \"string\");\n        }\n    }\n    return name + \": \" + str;\n}\nfunction formatPrimitive(ctx, value) {\n    if (isUndefined(value))\n        return ctx.stylize(\"undefined\", \"undefined\");\n    if (isString(value)) {\n        const simple = \"'\" + JSON.stringify(value).replace(/^\"|\"$/g, \"\").replace(/'/g, \"\\\\'\").replace(/\\\\\"/g, \"\\\\'\") + \"'\";\n        return ctx.stylize(simple, \"string\");\n    }\n    if (isNumber(value))\n        return ctx.stylize(\"\" + value, \"number\");\n    if (isBoolean(value))\n        return ctx.stylize(\"\" + value, \"boolean\");\n    if (isNull(value))\n        return ctx.stylize(\"null\", \"null\");\n}\nfunction reduceToSingleString(output, base, braces) {\n    return braces[0] + (base === \"\" ? \"\" : base + \"\\n\") + \"  \" + output.join(\",\\n  \") + \" \" + braces[1];\n}\nfunction _extend(origin, add) {\n    if (!add || !isObject(add))\n        return origin;\n    const keys = Object.keys(add);\n    let i = keys.length;\n    while (i--) {\n        origin[keys[i]] = add[keys[i]];\n    }\n    return origin;\n}\nexport function formatWithOptions(inspectOptions, ...args) {\n    const ctx = {\n        seen: [],\n        stylize: stylizeNoColor,\n    };\n    if (inspectOptions != null) {\n        _extend(ctx, inspectOptions);\n    }\n    const first = args[0];\n    let a = 0;\n    let str = \"\";\n    let join = \"\";\n    if (typeof first === \"string\") {\n        if (args.length === 1) {\n            return first;\n        }\n        let tempStr;\n        let lastPos = 0;\n        for (let i = 0; i < first.length - 1; i++) {\n            if (first.charCodeAt(i) === 37) {\n                const nextChar = first.charCodeAt(++i);\n                if (a + 1 !== args.length) {\n                    switch (nextChar) {\n                        case 115: {\n                            const tempArg = args[++a];\n                            if (typeof tempArg === \"number\") {\n                                tempStr = formatPrimitive(ctx, tempArg);\n                            }\n                            else if (typeof tempArg === \"bigint\") {\n                                tempStr = formatPrimitive(ctx, tempArg);\n                            }\n                            else if (typeof tempArg !== \"object\" || tempArg === null) {\n                                tempStr = String(tempArg);\n                            }\n                            else {\n                                tempStr = inspect(tempArg, {\n                                    ...inspectOptions,\n                                    compact: 3,\n                                    colors: false,\n                                    depth: 0,\n                                });\n                            }\n                            break;\n                        }\n                        case 106:\n                            tempStr = jsonStringifyRecursive(args[++a]);\n                            break;\n                        case 100: {\n                            const tempNum = args[++a];\n                            if (typeof tempNum === \"bigint\") {\n                                tempStr = formatPrimitive(ctx, tempNum);\n                            }\n                            else if (typeof tempNum === \"symbol\") {\n                                tempStr = \"NaN\";\n                            }\n                            else {\n                                tempStr = formatPrimitive(ctx, tempNum);\n                            }\n                            break;\n                        }\n                        case 79:\n                            tempStr = inspect(args[++a], inspectOptions);\n                            break;\n                        case 111:\n                            tempStr = inspect(args[++a], {\n                                ...inspectOptions,\n                                showHidden: true,\n                                showProxy: true,\n                                depth: 4,\n                            });\n                            break;\n                        case 105: {\n                            const tempInteger = args[++a];\n                            if (typeof tempInteger === \"bigint\") {\n                                tempStr = formatPrimitive(ctx, tempInteger);\n                            }\n                            else if (typeof tempInteger === \"symbol\") {\n                                tempStr = \"NaN\";\n                            }\n                            else {\n                                tempStr = formatPrimitive(ctx, parseInt(tempStr));\n                            }\n                            break;\n                        }\n                        case 102: {\n                            const tempFloat = args[++a];\n                            if (typeof tempFloat === \"symbol\") {\n                                tempStr = \"NaN\";\n                            }\n                            else {\n                                tempStr = formatPrimitive(ctx, parseInt(tempFloat));\n                            }\n                            break;\n                        }\n                        case 99:\n                            a += 1;\n                            tempStr = \"\";\n                            break;\n                        case 37:\n                            str += first.slice(lastPos, i);\n                            lastPos = i + 1;\n                            continue;\n                        default:\n                            continue;\n                    }\n                    if (lastPos !== i - 1) {\n                        str += first.slice(lastPos, i - 1);\n                    }\n                    str += tempStr;\n                    lastPos = i + 1;\n                }\n                else if (nextChar === 37) {\n                    str += first.slice(lastPos, i);\n                    lastPos = i + 1;\n                }\n            }\n        }\n        if (lastPos !== 0) {\n            a++;\n            join = \" \";\n            if (lastPos < first.length) {\n                str += first.slice(lastPos);\n            }\n        }\n    }\n    while (a < args.length) {\n        const value = args[a];\n        str += join;\n        str += typeof value !== \"string\" ? inspect(value, inspectOptions) : value;\n        join = \" \";\n        a++;\n    }\n    return str;\n}\n","import { prettyLogStyles } from \"./prettyLogStyles.js\";\nexport function formatTemplate(settings, template, values, hideUnsetPlaceholder = false) {\n    const templateString = String(template);\n    const ansiColorWrap = (placeholderValue, code) => `\\u001b[${code[0]}m${placeholderValue}\\u001b[${code[1]}m`;\n    const styleWrap = (value, style) => {\n        if (style != null && typeof style === \"string\") {\n            return ansiColorWrap(value, prettyLogStyles[style]);\n        }\n        else if (style != null && Array.isArray(style)) {\n            return style.reduce((prevValue, thisStyle) => styleWrap(prevValue, thisStyle), value);\n        }\n        else {\n            if (style != null && style[value.trim()] != null) {\n                return styleWrap(value, style[value.trim()]);\n            }\n            else if (style != null && style[\"*\"] != null) {\n                return styleWrap(value, style[\"*\"]);\n            }\n            else {\n                return value;\n            }\n        }\n    };\n    return templateString.replace(/{{(.+?)}}/g, (_, placeholder) => {\n        const value = values[placeholder] != null ? values[placeholder] : hideUnsetPlaceholder ? \"\" : _;\n        return settings.stylePrettyLogs ? styleWrap(value, settings?.prettyLogStyles?.[placeholder]) + ansiColorWrap(\"\", prettyLogStyles.reset) : value;\n    });\n}\n","export function jsonStringifyRecursive(obj) {\n    const cache = new Set();\n    return JSON.stringify(obj, (key, value) => {\n        if (typeof value === \"object\" && value !== null) {\n            if (cache.has(value)) {\n                return \"[Circular]\";\n            }\n            cache.add(value);\n        }\n        return value;\n    });\n}\n","export function formatNumberAddZeros(value, digits = 2, addNumber = 0) {\n    if (value != null && isNaN(value)) {\n        return \"\";\n    }\n    value = value != null ? value + addNumber : value;\n    return digits === 2\n        ? value == null\n            ? \"--\"\n            : value < 10\n                ? \"0\" + value\n                : value.toString()\n        : value == null\n            ? \"---\"\n            : value < 10\n                ? \"00\" + value\n                : value < 100\n                    ? \"0\" + value\n                    : value.toString();\n}\n","export const prettyLogStyles = {\n    reset: [0, 0],\n    bold: [1, 22],\n    dim: [2, 22],\n    italic: [3, 23],\n    underline: [4, 24],\n    overline: [53, 55],\n    inverse: [7, 27],\n    hidden: [8, 28],\n    strikethrough: [9, 29],\n    black: [30, 39],\n    red: [31, 39],\n    green: [32, 39],\n    yellow: [33, 39],\n    blue: [34, 39],\n    magenta: [35, 39],\n    cyan: [36, 39],\n    white: [37, 39],\n    blackBright: [90, 39],\n    redBright: [91, 39],\n    greenBright: [92, 39],\n    yellowBright: [93, 39],\n    blueBright: [94, 39],\n    magentaBright: [95, 39],\n    cyanBright: [96, 39],\n    whiteBright: [97, 39],\n    bgBlack: [40, 49],\n    bgRed: [41, 49],\n    bgGreen: [42, 49],\n    bgYellow: [43, 49],\n    bgBlue: [44, 49],\n    bgMagenta: [45, 49],\n    bgCyan: [46, 49],\n    bgWhite: [47, 49],\n    bgBlackBright: [100, 49],\n    bgRedBright: [101, 49],\n    bgGreenBright: [102, 49],\n    bgYellowBright: [103, 49],\n    bgBlueBright: [104, 49],\n    bgMagentaBright: [105, 49],\n    bgCyanBright: [106, 49],\n    bgWhiteBright: [107, 49],\n};\n"],"names":["meta","runtime","window","document","includes","browser","globalThis","userAgent","pathRegex","getMeta","logLevelId","logLevelName","stackDepthLevel","hideLogPositionForPerformance","name","parentNames","Object","assign","date","Date","path","undefined","getCallerStackFrame","error","Error","stackLineToStackFrame","stack","split","filter","line","getErrorTrace","reduce","result","push","href","location","origin","pathResult","fullFilePath","fileName","fileNameWithLine","fileColumn","fileLine","filePath","filePathWithLine","method","match","replace","pathParts","length","isError","e","prettyFormatLogObj","maskedArgs","settings","arg","errors","errorStackStr","map","stackFrame","prettyErrorStackTemplate","placeholderValuesError","errorName","errorMessage","message","errorStack","join","prettyErrorTemplate","prettyFormatErrorObj","args","transportFormatted","logMetaMarkup","logArgs","logErrors","logErrorsStr","prettyInspectOptions","colors","stylePrettyLogs","console","log","transportJSON","json","isBuffer","Logger","constructor","logObj","super","silly","trace","debug","info","warn","fatal","getSubLogger","BaseLogger","this","isBrowser","isNode","prototype","toString","call","process","isBrowserBlinkEngine","Intl","isSafari","test","navigator","type","minLevel","argumentsArrayName","hideLogPositionForProduction","prettyLogTemplate","prettyErrorParentNamesSeparator","prettyErrorLoggerNameDelimiter","prettyLogTimeZone","prettyLogStyles","SILLY","TRACE","DEBUG","INFO","WARN","ERROR","FATAL","dateIsoStr","nameWithDelimiterPrefix","nameWithDelimiterSuffix","compact","depth","Infinity","metaProperty","maskPlaceholder","maskValuesOfKeys","maskValuesOfKeysCaseInsensitive","maskValuesRegEx","prefix","attachedTransports","overwrite","mask","toLogObj","addMeta","formatMeta","formatLogObj","_mask","thisLogObj","_recursiveCloneAndExecuteFunctions","_toLogObj","logObjWithMeta","_addMetaToLogObj","logArgsAndErrorsMarkup","_prettyFormatLogObjMeta","forEach","transportLogger","attachTransport","subLoggerSettings","key","toLowerCase","_recursiveCloneAndMaskValuesOfKeys","source","keys","seen","Map","Set","Array","isArray","item","getTime","getOwnPropertyNames","o","prop","_cloneError","create","getPrototypeOf","regEx","defineProperty","getOwnPropertyDescriptor","clonedLogObj","_toErrorObject","newError","ErrorConstructor","propertyNames","propName","propDesc","writable","nativeError","logObjMeta","template","placeholderValues","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","dateInSettingsTimeZone","getTimezoneOffset","toISOString","parentNamesString","inspect","obj","opts","ctx","stylize","stylizeNoColor","_extend","isUndefined","showHidden","customInspect","stylizeWithColor","formatValue","str","styleType","style","styles","isFunction","isString","isNull","hasOwn","hasOwnProperty","isRegExp","re","isObject","objectToString","isDate","d","formatError","value","recurseTimes","ret","primitive","formatPrimitive","visibleKeys","array","hash","val","arrayToHash","indexOf","RegExp","output","base","braces","toUTCString","i","l","String","formatProperty","formatArray","pop","reduceToSingleString","desc","get","set","substr","JSON","stringify","simple","add","formatWithOptions","inspectOptions","first","a","tempStr","lastPos","charCodeAt","nextChar","tempArg","tempNum","showProxy","tempInteger","parseInt","tempFloat","slice","special","number","boolean","null","string","regexp","formatTemplate","values","hideUnsetPlaceholder","templateString","ansiColorWrap","placeholderValue","code","styleWrap","prevValue","thisStyle","trim","_","placeholder","reset","jsonStringifyRecursive","cache","has","formatNumberAddZeros","digits","addNumber","isNaN","bold","dim","italic","underline","overline","inverse","hidden","strikethrough","black","red","green","yellow","blue","magenta","cyan","white","blackBright","redBright","greenBright","yellowBright","blueBright","magentaBright","cyanBright","whiteBright","bgBlack","bgRed","bgGreen","bgYellow","bgBlue","bgMagenta","bgCyan","bgWhite","bgBlackBright","bgRedBright","bgGreenBright","bgYellowBright","bgBlueBright","bgMagentaBright","bgCyanBright","bgWhiteBright"],"sourceRoot":""}